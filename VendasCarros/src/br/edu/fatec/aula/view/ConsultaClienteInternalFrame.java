/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.edu.fatec.aula.view;

import br.edu.fatec.aula.model.Clientes;
import br.edu.fatec.aula.model.HibernateUtil;
import java.awt.Color;
import java.awt.Cursor;
import java.util.List;
import javax.swing.table.DefaultTableModel;
import org.hibernate.HibernateException;
import org.hibernate.Session;

/**
 *
 * @author Tiago Guerino
 */
public class ConsultaClienteInternalFrame extends javax.swing.JInternalFrame {

    /**
     * Creates new form ConsultaClienteInternalFrame
     */
    public ConsultaClienteInternalFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    public void buscarCliente() {
        List<Clientes> list = null;
        Session session = HibernateUtil.getSessionFactory().openSession();

        try {
            session.beginTransaction();
            list = session.createQuery("select c from Clientes c where cpf='"
                    + cpfFormattedTextField.getText() + "'").list();
            session.getTransaction().commit();

            for (Clientes c : list) {

                DefaultTableModel tabela;
                tabela = (DefaultTableModel) tabelaClienteTable.getModel();
                Object[] linha = {
                    c.getIdclientes(),
                    c.getNome(),
                    c.getCpf(),
                    c.getRg(),
                    c.getOrgao(),
                    c.getSexo(),
                    c.getNascimento(),
                    c.getCivil(),
                    c.getEndereco(),
                    c.getComplemento(),
                    c.getCep(),
                    c.getBairro(),
                    c.getCidade(),
                    c.getEstado(),
                    c.getTelefone(),
                    c.getCelular(),
                    c.getEmail(),
                    c.getOcupacao(),
                    c.getSalario(),};
                tabela.addRow(linha);
            }

        } catch (HibernateException e) {
            if (session.getTransaction() != null) {
                session.getTransaction().rollback();
            }
        } finally {
            session.close();
        }

    }

    public void buscarTodosCliente() {
        List<Clientes> list = null;
        Session session = HibernateUtil.getSessionFactory().openSession();

        try {
            session.beginTransaction();
            list = session.createQuery("select c from Clientes c").list();
            session.getTransaction().commit();

            for (Clientes c : list) {

                DefaultTableModel tabela;
                tabela = (DefaultTableModel) tabelaClienteTable.getModel();
                Object[] linha = {
                    c.getIdclientes(),
                    c.getNome(),
                    c.getCpf(),
                    c.getRg(),
                    c.getOrgao(),
                    c.getSexo(),
                    c.getNascimento(),
                    c.getCivil(),
                    c.getEndereco(),
                    c.getComplemento(),
                    c.getCep(),
                    c.getBairro(),
                    c.getCidade(),
                    c.getEstado(),
                    c.getTelefone(),
                    c.getCelular(),
                    c.getEmail(),
                    c.getOcupacao(),
                    c.getSalario(),};
                tabela.addRow(linha);
            }

        } catch (HibernateException e) {
            if (session.getTransaction() != null) {
                session.getTransaction().rollback();
            }
        } finally {
            session.close();
        }

    }

    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        buscaPanel = new javax.swing.JPanel();
        cpfLabel = new javax.swing.JLabel();
        buscarButtonPanel = new javax.swing.JPanel();
        buscarButtonLabel = new javax.swing.JLabel();
        limparButtonPanel = new javax.swing.JPanel();
        limparButtonLabel = new javax.swing.JLabel();
        cpfFormattedTextField = new javax.swing.JFormattedTextField();
        dadosPanel = new javax.swing.JPanel();
        tabelaClienteScrollPanel = new javax.swing.JScrollPane();
        tabelaClienteTable = new javax.swing.JTable();

        setClosable(true);
        setIconifiable(true);
        setTitle("Consulta de Clientes");
        setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        setOpaque(true);
        try {
            setSelected(true);
        } catch (java.beans.PropertyVetoException e1) {
            e1.printStackTrace();
        }

        jPanel1.setBackground(new java.awt.Color(204, 0, 0));

        buscaPanel.setBackground(new java.awt.Color(204, 0, 0));
        buscaPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1), "Busca de Clientes", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Calibri", 0, 13), new java.awt.Color(255, 255, 204))); // NOI18N
        buscaPanel.setToolTipText("");

        cpfLabel.setForeground(new java.awt.Color(255, 255, 204));
        cpfLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        cpfLabel.setText("CPF");

        buscarButtonPanel.setBackground(new java.awt.Color(255, 0, 0));

        buscarButtonLabel.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        buscarButtonLabel.setForeground(new java.awt.Color(255, 255, 204));
        buscarButtonLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        buscarButtonLabel.setText("Buscar");
        buscarButtonLabel.setToolTipText("Busca o cliente");
        buscarButtonLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                buscarButtonLabelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                buscarButtonLabelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                buscarButtonLabelMouseExited(evt);
            }
        });

        javax.swing.GroupLayout buscarButtonPanelLayout = new javax.swing.GroupLayout(buscarButtonPanel);
        buscarButtonPanel.setLayout(buscarButtonPanelLayout);
        buscarButtonPanelLayout.setHorizontalGroup(
            buscarButtonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(buscarButtonLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 138, Short.MAX_VALUE)
        );
        buscarButtonPanelLayout.setVerticalGroup(
            buscarButtonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(buscarButtonLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 45, Short.MAX_VALUE)
        );

        limparButtonPanel.setBackground(new java.awt.Color(255, 0, 0));

        limparButtonLabel.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        limparButtonLabel.setForeground(new java.awt.Color(255, 255, 204));
        limparButtonLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        limparButtonLabel.setText("Limpar Busca");
        limparButtonLabel.setToolTipText("Adiciona novo cliente");
        limparButtonLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                limparButtonLabelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                limparButtonLabelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                limparButtonLabelMouseExited(evt);
            }
        });

        javax.swing.GroupLayout limparButtonPanelLayout = new javax.swing.GroupLayout(limparButtonPanel);
        limparButtonPanel.setLayout(limparButtonPanelLayout);
        limparButtonPanelLayout.setHorizontalGroup(
            limparButtonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(limparButtonLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 138, Short.MAX_VALUE)
        );
        limparButtonPanelLayout.setVerticalGroup(
            limparButtonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(limparButtonLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 45, Short.MAX_VALUE)
        );

        cpfFormattedTextField.setBackground(new java.awt.Color(204, 0, 0));
        cpfFormattedTextField.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        cpfFormattedTextField.setForeground(new java.awt.Color(255, 255, 204));
        try {
            cpfFormattedTextField.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###.###.###-##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        cpfFormattedTextField.setText("");
        cpfFormattedTextField.setToolTipText("Digite o CPF do cliente");

        javax.swing.GroupLayout buscaPanelLayout = new javax.swing.GroupLayout(buscaPanel);
        buscaPanel.setLayout(buscaPanelLayout);
        buscaPanelLayout.setHorizontalGroup(
            buscaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(buscaPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cpfLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cpfFormattedTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 276, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(209, Short.MAX_VALUE))
            .addGroup(buscaPanelLayout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(buscarButtonPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(limparButtonPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        buscaPanelLayout.setVerticalGroup(
            buscaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, buscaPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(buscaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cpfLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cpfFormattedTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(buscaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(limparButtonPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buscarButtonPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        dadosPanel.setBackground(new java.awt.Color(204, 0, 0));
        dadosPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1), "Dados do Cliente", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Calibri", 0, 13), new java.awt.Color(255, 255, 204))); // NOI18N

        tabelaClienteScrollPanel.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);
        tabelaClienteScrollPanel.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        tabelaClienteTable.setBackground(new java.awt.Color(255, 51, 51));
        tabelaClienteTable.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        tabelaClienteTable.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        tabelaClienteTable.setForeground(new java.awt.Color(255, 255, 204));
        tabelaClienteTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Nome", "CPF", "RG", "Orgão Emissor", "Sexo", "Data de Nascimento", "Estado Civil", "Endereço", "Complemento", "CEP", "Bairro", "Cidade", "Estado", "Telefone", "Celular", "Email", "Ocupação", "Renda Salarial"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabelaClienteTable.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        tabelaClienteTable.setGridColor(new java.awt.Color(255, 102, 102));
        tabelaClienteTable.setSelectionBackground(new java.awt.Color(193, 21, 21));
        tabelaClienteTable.setSelectionForeground(new java.awt.Color(255, 255, 204));
        tabelaClienteScrollPanel.setViewportView(tabelaClienteTable);

        javax.swing.GroupLayout dadosPanelLayout = new javax.swing.GroupLayout(dadosPanel);
        dadosPanel.setLayout(dadosPanelLayout);
        dadosPanelLayout.setHorizontalGroup(
            dadosPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dadosPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tabelaClienteScrollPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 543, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        dadosPanelLayout.setVerticalGroup(
            dadosPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tabelaClienteScrollPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 134, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(dadosPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(buscaPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(181, 181, 181)
                .addComponent(dadosPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(19, 19, 19))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(buscaPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(206, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buscarButtonLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buscarButtonLabelMouseClicked
        if (cpfFormattedTextField.getText().equals("   .   .   -  ")) {
            this.buscarTodosCliente();
        } else {
            this.buscarCliente();
        }
    }//GEN-LAST:event_buscarButtonLabelMouseClicked

    private void limparButtonLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_limparButtonLabelMouseClicked
        DefaultTableModel tabela;
        tabela = (DefaultTableModel) tabelaClienteTable.getModel();

        if (tabela.getRowCount() > 0) {
            while (tabela.getRowCount() > 0) {
                tabela.removeRow(0);
            }
        }
    }//GEN-LAST:event_limparButtonLabelMouseClicked

    private void buscarButtonLabelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buscarButtonLabelMouseEntered
        getContentPane().setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
        buscarButtonPanel.setBackground(new Color(255,23,23));
    }//GEN-LAST:event_buscarButtonLabelMouseEntered

    private void limparButtonLabelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_limparButtonLabelMouseEntered
        getContentPane().setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
        limparButtonPanel.setBackground(new Color(255,23,23));
    }//GEN-LAST:event_limparButtonLabelMouseEntered

    private void buscarButtonLabelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buscarButtonLabelMouseExited
        getContentPane().setCursor(Cursor.getDefaultCursor());
        buscarButtonPanel.setBackground(new Color(255,0,0));
    }//GEN-LAST:event_buscarButtonLabelMouseExited

    private void limparButtonLabelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_limparButtonLabelMouseExited
       getContentPane().setCursor(Cursor.getDefaultCursor());
        limparButtonPanel.setBackground(new Color(255,0,0));
    }//GEN-LAST:event_limparButtonLabelMouseExited


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel buscaPanel;
    private javax.swing.JLabel buscarButtonLabel;
    private javax.swing.JPanel buscarButtonPanel;
    private javax.swing.JFormattedTextField cpfFormattedTextField;
    private javax.swing.JLabel cpfLabel;
    private javax.swing.JPanel dadosPanel;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel limparButtonLabel;
    private javax.swing.JPanel limparButtonPanel;
    private javax.swing.JScrollPane tabelaClienteScrollPanel;
    private javax.swing.JTable tabelaClienteTable;
    // End of variables declaration//GEN-END:variables
}
